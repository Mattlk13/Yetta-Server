schema {
  query: rootQuery
  mutation: rootMutation
}

input createUserInput {
  email: String!
  name: String!
  password: String!
  clientMutationId: String
}

type createUserPayload {
  user: User
  clientMutationId: String
}

scalar Date

# Coordinate Reference System (CRS) object.
type GeoJSONCoordinateReferenceSystem {
  type: GeoJSONCRSType!
  properties: GeoJSONCRSProperties!
}

# A (multidimensional) set of coordinates following x, y, z order.
scalar GeoJSONCoordinates

# CRS object properties.
union GeoJSONCRSProperties = GeoJSONNamedCRSProperties | GeoJSONLinkedCRSProperties

# Enumeration of all GeoJSON CRS object types.
enum GeoJSONCRSType {
  name
  link
}

interface GeoJSONGeometryInterface {
  type: GeoJSONType!
  crs: GeoJSONCoordinateReferenceSystem!
  bbox: [Float]
  coordinates: GeoJSONCoordinates
}

interface GeoJSONInterface {
  type: GeoJSONType!
  crs: GeoJSONCoordinateReferenceSystem!
  bbox: [Float]
}

# Properties for link based CRS object.
type GeoJSONLinkedCRSProperties {
  href: String!
  type: String
}

# Properties for name based CRS object.
type GeoJSONNamedCRSProperties {
  name: String!
}

# Object describing a single geographical point.
type GeoJSONPoint implements GeoJSONInterface, GeoJSONGeometryInterface {
  type: GeoJSONType!
  crs: GeoJSONCoordinateReferenceSystem!
  bbox: [Float]
  coordinates: GeoJSONCoordinates
}

# Enumeration of all GeoJSON object types.
enum GeoJSONType {
  Point
  MultiPoint
  LineString
  MultiLineString
  Polygon
  MultiPolygon
  GeometryCollection
  Feature
  FeatureCollection
}

input getTokenInput {
  email: String!
  password: String!
  clientMutationId: String
}

type getTokenPayload {
  user: User
  clientMutationId: String
}

# Root Mutation of the Pingsters Schema
type rootMutation {
  createUser(input: createUserInput!): createUserPayload
  getToken(input: getTokenInput!): getTokenPayload
}

# Root Query of the Pingsters Schema
type rootQuery {
  # List of All users in Pingsters
  users: [User]

  # UserType by _id
  user(
    # _id of user.
    _id: String!
  ): User

  # Logged in user.
  viewer: User

  # List of users in device screen area.
  enteredUsers(
    # bottomLeft
    bottomLeft: [Float]

    # upperRight
    upperRight: [Float]
  ): [User]
}

# UserType of Pingsters
type User {
  _id: String
  email: String
  name: String
  phoneNumber: String
  deviceUUID: String
  phoneSecretCode: String
  phoneValidAt: Date
  isPhoneValid: Boolean
  validAt: Date
  point: GeoJSONPoint

  # accessToken of user
  accessToken: String
  createdAt: Date

  # List of friends from user
  friends: [User]
}
